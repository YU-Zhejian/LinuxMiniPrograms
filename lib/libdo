#!/bin/bash
function DO_ECHO(){
    if [ "$LIBDO_LOG_MODE" = "S" ];then return;fi
    if ! [ -z $LIBDO_LOG ];then
        echo $@>>$LIBDO_LOG
    else
        echo -e "\e[33m$@\e[0m">&2
    fi
}
function DO(){
    LIBDO_CMD="$@"
    DO_ECHO "LIBDO IS GOING TO EXECUTE $LIBDO_CMD"
    DO_ECHO "LIBDO STARTED AT `date`."
    if [ -z $LIBDO_LOG ];then
        eval $LIBDO_CMD &
        LIBDO_PID=$!
    else
        case $LIBDO_LOG_MODE in
            "2")
                eval $LIBDO_CMD 2>>$LIBDO_LOG  &
                LIBDO_PID=$!
            ;;
            "3")
                eval $LIBDO_CMD >>$LIBDO_LOG  &
                LIBDO_PID=$!
            ;;
            "4")
                eval $LIBDO_CMD &>>$LIBDO_LOG  &
                LIBDO_PID=$!
            ;;
            *)
                eval $LIBDO_CMD  &
                LIBDO_PID=$!
        esac
    fi
    DO_ECHO "LIBDO PID $LIBDO_PID"
    wait $LIBDO_PID
    LIBDO_PRIV=$?
    DO_ECHO "LIBDO STOPPED AT `date`."
    if [ $LIBDO_PRIV -ne 0 ];then
        DO_ECHO "LIBDO FAILED, GOT \$?=$LIBDO_PRIV."
        if ! [ -z $LIBDO_TOP_PID ];then
            DO_ECHO "WILL KILL $LIBDO_TOP_PID"
            kill -9 $LIBDO_TOP_PID
        fi
    else
        DO_ECHO "LIBDO EXITED SUCCESSFULLY."
    fi
    return $LIBDO_PRIV
}
# Do something! The return value is the exit value of "something".
# ENVIRONMENTAL VARIABLES:
# LIBDO_TOP_PID: the pid to kill if failed. If blank, will not kill.
# LIBDO_PRIV: exit status.
# LIBDO_LOG: log name. If blank, there will be no logs.
# LIBDO_LOG_MODE: log mode. S: Silent, stop DO_ECHO 1: Redirect DO_ECHO only. 2: Redirect STDERR. 3: Redirect STDOUT. 4: Redirect all.
