#!/bin/bash
DN=`dirname $0`
echo -e "\e[33mYuZJLab LibDO Manager.\e[0m"
echo -e "\e[33mCopyright (C) 2020 YU Zhejian\e[0m"
if [ -f $DN/../lib/libisopt ] && [ -x $DN/../lib/libisopt ];then
    . $DN/../lib/libisopt
    echo -e "\e[33mlibisopt loaded.\e[0m">&2
else
    echo -e "\e[31mERROR: libisopt not found.\e[0m">&2
    exit 1
fi
for opt in $@;do
    if isopt $opt;then
        case $opt in
            "-h"|"--help")
                echo -e "\e[31mThis is a LibDO Log Manager. Useage:"
                echo "libdo_man [libdo_output] [options]"
                echo
                echo "Available options:"
                echo "  -h|--help Dicplay this help."
                echo "  -v|--version Print version information."
                echo "  -s|--summary Print summary."
                echo "  -o:[item]|--output:[item] Get the output of [item]."
                echo -e "\e[0m"
                exit 0
            ;;
            "-v"|"--version")
                echo -e "\e[31mVersion 1, compatiable with libdo Version 1.\e[0m"
                exit 0
            ;;
            "-s"|"--summary")
                cmd=0
            ;;
            -o\:*)
                cmd=${opt:3}
            ;;
            --output\:*)
                cmd=${opt:9}
            ;;
            *)
                echo -e "\e[31mERROR: Option '$opt' invalid.\e[0m"
                exit 1
        esac
        OPT="$OPT $opt"
    else
        STDS="$STDS $opt"
    fi
done
STDI=($STDS)
fn=${STDI[0]}
if ! [ -f $fn ];then
    echo -e "\e[31mERROR: Filename '$fn' invalid.\e[0m"
    exit 1
fi
echo -e "\e[33mReceived: $0 $fn $OPT \e[0m"
summary=`mktemp -t libdo_man.XXXXXX`
cat $fn|grep LIBDO>$summary
Proj=1
ln=0
status=4
while read line;do
    ln=$[$ln+1]
    case $line in
        "LIBDO IS GOING TO EXECUTE"*)
            if [ $status -ge 1 ] && [ $status -le 2 ];then
                Proj=$[$Proj+1]
                Proj_Cont_e[$Proj]=$[$ln-1]
                Proj_Time_e[$Proj]=0
                Proj_Exit[$Proj]="-1"
            fi
            status=1
            Proj_CMD[$Proj]=${line:26}
        ;;
        "LIBDO STARTED AT"*)
            Proj_Time_s[$Proj]=$ln
        ;;
        "LIBDO PID"*)
            status=2
            Proj_Cont_s[$Proj]=$[$ln+1]
        ;;
        "LIBDO STOPPED AT"*)
            status=3
            Proj_Time_e[$Proj]=$ln
        ;;
        "LIBDO EXITED SUCCESSFULLY.")
            status=4
            Proj_Exit[$Proj]="0"
        ;;
        "LIBDO FAILED, GOT"*)
            status=5
            Proj_Exit[$Proj]=${line:19}
        ;;
    esac
done < $summary


if [ "$cmd" = 0 ];then
    if [ -f $DN/../lib/libmktbl ] && [ -x $DN/../lib/libmktbl ];then
        . $DN/../lib/libmktbl
        echo -e "\e[33mlibmktbl loaded.\e[0m">&2
    else
        echo -e "\e[31mERROR: libmktbl not found.\e[0m">&2
        exit 1
    fi
    echo -e "\#\n\#1S10\n\#1">table
    for ((i=1;i<=$Proj;i++));do
        echo "$i;${Proj_CMD[$i]};${Proj_Exit[$i]}"|sed "s/ /_/g">>table
    done
    mktbl table
else
echo "s"
fi


rm $summary