#!/usr/bin/env bash
# PSS V1P8
. "${DN}"/../lib/libisopt
. "${DN}"/../lib/libstr
. "${DN}"/../etc/path.sh
infoh "YuZJLab Process Snapshot Searcher"
infoh "Copyright (C) 2019-2020 YU Zhejian"
set -ue
cd "$(readlink -f "$(dirname "${0}")")"

more="${mymore}"
STDS=()
for opt in "${@}"; do
	if isopt ${opt}; then
		case ${opt} in
		"-h" | "--help")
			yldoc pss
			exit 0
			;;
		"-v" | "--version")
			echo "Version 1 patch 8"
			exit 0
			;;
		--more\:*)
			more="${opt:7}"
			if $("${more}" --help &>/dev/null;echo ${?}) -eq 127; then
				warnh "Invalid More '${more}'! Will use original '${mymore}' instead"
				more="${mymore}"
			else
				infoh "Will use '${more}' as More"
			fi
			;;
		*)
			errh "Option '${opt}' invalid"
			;;
		esac
	else
		STDS=("${STDS[@]}" "${opt}")
	fi
done
psstmp=$(mktemp -t psstmp.XXXXXX)
pssstmp=$(mktemp -t psstmp.XXXXXX)
if ! "${myps}" --version &>> /dev/null;then
	"${myps}" -a -l &>"${psstmp}"
elif [[ $("${myps}" --version) == *cygwin* ]]; then
	"${myps}" -W &>"${psstmp}"
else
	"${myps}" -A all &>"${psstmp}"
fi
if [ ${#STDS[@]} -eq 0 ]; then
	"${mycat}" "${psstmp}" | "${more}"
else
	${myhead} -n 1 ${psstmp}
	for fn in "${STDS[@]}"; do
		"${mycat}" "${psstmp}" | "${mygrep}" -- "${fn}" >>"${pssstmp}"
	done
	"${mycat}" "${pssstmp}" | "${more}"
fi
"${myrm}" "${psstmp}" "${pssstmp}"
