#!/usr/bin/env bash
# PSS V1P8
echo -e "\e[33mYuZJLab Process Snapshot Searcher"
echo -e "Copyright (C) 2019-2020 YU Zhejian\e[0m"
set -ue
cd ""$(readlink -f "$(dirname "${0}")")""
. ../lib/libisopt
. ../etc/path.sh
more="${mymore}"
STDS=''
for opt in "${@}"; do
    if isopt ${opt}; then
        case ${opt} in
        "-h" | "--help")
            yldoc pss
            exit 0
            ;;
        "-v" | "--version")
            echo "Version 1 patch 8"
            exit 0
            ;;
        --more\:*)
            more="${opt:7}"
            if $("${more}" --help &>/dev/null;echo ${?}) -eq 127; then
                echo -e "\e[31mERROR! Invalid More '${more}'! Will use original '${mymore}' instead.\e[0m"
                more="${mymore}"
            else
                echo -e "\e[33mWill use '${more}' as More.\e[0m"
            fi
            ;;
        *)
            echo -e "\e[31mERROR: Option '${opt}' invalid.\e[0m"
            exit 1
            ;;
        esac
    else
        STDS="${STDS} ${opt}"
    fi
done
psstmp=$(mktemp -t psstmp.XXXXXX)
pssstmp=$(mktemp -t psstmp.XXXXXX)
if ! "${myps}" --verion &>> /dev/null;then
    "${myps}" -a -l >"${psstmp}"
elif [[ $("${myps}" --version) == *cygwin* ]]; then
    "${myps}" -W >"${psstmp}"
else
    "${myps}" -A all >"${psstmp}"
fi
if [ -z "${STDS}" ]; then
    "${mycat}" "${psstmp}" | "${more}"
else
    ${myhead} -n 1 ${psstmp}
    STDI=(${STDS})
    for fn in "${STDI[@]}"; do
        "${mycat}" "${psstmp}" | "${mygrep}" -- "${fn}" >>"${pssstmp}"
    done
    "${mycat}" "${pssstmp}" | "${more}"
fi
"${myrm}" "${psstmp}" "${pssstmp}"
