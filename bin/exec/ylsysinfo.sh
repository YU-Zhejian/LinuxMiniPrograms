. "${DN}"/../lib/libisopt
OLD_IFS="${IFS}"
for opt in "${@}"; do
    if isopt "${opt}"; then
        case "${opt}" in
        "-h" | "--help")
            echo "No documentation for this product. Use 'ylsysinfo' right away or '-v|--version' option for version information.."
            exit 0
            ;;
        "-v" | "--version")
            echo "Version 1"
            exit 0
            ;;
        esac
    fi
done
tmpf="$(mktemp -t ylsysinfo.XXXXX)"
echo -e "\033[033mChecking operating systems:\033[0m"
if [ -r /proc/version ]; then
    echo -e "\033[033mSystem information generated by '/proc/version':\033[0m"
    verstr="$("${mycat}" /proc/version)"
    echo "${verstr}"
    IFS=' '
    verstrs=(${verstr})
    IFS=''
    echo -e '#1\n#1' > "${tmpf}"
    echo "System type;${verstrs[0]}" >> "${tmpf}"
    echo "Kernel version;${verstrs[2]}" >> "${tmpf}"
    echo "Kernel built by;${verstrs[3]:1:-1}" >> "${tmpf}"
    unset verstrs[0] verstrs[1] verstrs[2] verstrs[3]
    gcc_pre=$(echo ${verstrs[*]} | "${mysed}" 's;).*$;;' | "${mysed}" 's;(;;')
    IFS='('
    gcc_pres=(${gcc_pre})
    IFS=''
    date_pre=$(echo ${verstrs[*]} | "${mysed}" 's;^.*);;' | "${mysed}" 's;#1 SMP;;' | "${mysed}" 's;^\s+;;')
    echo "Kernel built with GCC;${gcc_pres[0]}" >> "${tmpf}"
    echo "Kernel built on platform;${gcc_pres[1]}" >> "${tmpf}"
    echo "Kernel built on date;${date_pre}" >> "${tmpf}"
    ylmktbl "${tmpf}"
    unset verstr verstrs date_pre gcc_pre gcc_pres
else
    echo -e "\033[031mFailed to read '/proc/version'\033[0m"
fi
if uname -a &>>/dev/null; then
    echo -e "\033[033mSystem information generated by 'uname -a':\033[0m"
    verstr="$(uname -a)"
    echo "${verstr}"
    IFS=' '
    verstrs=(${verstr})
    IFS=''
    hoststr="${verstrs[1]}"
    echo -e '#1\n#1' > "${tmpf}"
    echo "System type;${verstrs[0]}" >> "${tmpf}"
    echo "Kernel version;${verstrs[2]}" >> "${tmpf}"
    echo "Kernel architecture;${verstrs[-1]} ${verstrs[-2]}" >> "${tmpf}"
    unset verstrs[0] verstrs[1] verstrs[2] verstrs[-2] verstrs[-1]
    date_pre=$(echo ${verstrs[*]} | "${mysed}" 's;#1 SMP;;' | "${mysed}" 's;^\s+;;')
    echo "Kernel built on date;${date_pre}" >> "${tmpf}"
    echo "Network host name;${hoststr}" >> "${tmpf}"
    ylmktbl "${tmpf}"
    unset verstr verstrs date_pre hoststr
else
    echo -e "\033[031mFailed to execute 'uname -a'\033[0m"
fi
echo -e "\033[033mChecking users:\033[0m"
if id -a &>>/dev/null || id &>>/dev/null; then
    echo -e "\033[033mUser information generated by 'id -a||id'\033[0m"
    verstr=$(id -a || id)
    echo -e "\t${verstr}"
    IFS=' '
    verstrs=(${verstr})
    IFS=''
    echo -e '#1\n#1' > "${tmpf}"
    echo "User name;$(echo ${verstrs[0]} | "${mysed}" 's;^.*(;;' | "${mysed}" 's;).*$;;')" >> "${tmpf}"
    echo "User ID;$(echo ${verstrs[0]} | "${mysed}" 's;^.*=;;' | "${mysed}" 's;(.*$;;')" >> "${tmpf}"
    echo "User major group name;$(echo ${verstrs[1]} | "${mysed}" 's;^.*(;;' | "${mysed}" 's;).*$;;')" >> "${tmpf}"
    echo "User major group ID;$(echo ${verstrs[1]} | "${mysed}" 's;^.*=;;' | "${mysed}" 's;(.*$;;')" >> "${tmpf}"
    ylmktbl "${tmpf}"
    echo -e '#1\n#1\nUser minor group name;User minor group ID' > "${tmpf}"
    IFS=' '
    verstr="${verstrs[3]}"
    IFS=','
    verstrs=(${verstr})
    IFS=''
    for ((i = 1; i < ${#verstrs[@]}; i++)); do
        echo "$(echo ${verstrs[${i}]} | "${mysed}" 's;^.*(;;' | "${mysed}" 's;).*$;;');$(echo ${verstrs[${i}]} | "${mysed}" 's;^.*=;;' | "${mysed}" 's;(.*$;;')" >> "${tmpf}"
    done
    ylmktbl "${tmpf}"
    unset verstr verstrs
else
    echo -e "\033[031mFailed to execute 'id -a||id'\033[0m"
fi
if [ -r /etc/passwd ]; then
    echo -e "\033[033mUser information generated by '/etc/passwd':\033[0m"
    echo -e '#1\n#1\nUser name;User password;User ID;User group ID;User gecos;User home directory;User Shell' > "${tmpf}"
    "${mycat}" /etc/passwd | "${mysed}" 's/:/;/' >> "${tmpf}"
    ylmktbl "${tmpf}"
    unset line lines
else
    echo -e "\033[031mFailed to read '/etc/passwd'\033[0m"
fi
exit
echo -e "\033[033mChecking file systems:\033[0m"
if mount &>>/dev/null; then
    echo -e "\033[033mFile system information generated by 'mount':\033[0m"
    mount | "${mysed}" 's;^;\t;'
fi
echo -e "\033[033mChecking hardware:\033[0m"
if [ -r /proc/cpuinfo ]; then
    echo -e "\033[033mCPU information generated by '/proc/cpuinfo':\033[0m"
    "${mycat}" /proc/cpuinfo | "${mygrep}" -v '^$' | while read line; do
        IFS=":"
        lines=(${line})
        IFS=''
        lines[0]=$(echo ${lines[0]} | "${mysed}" 's;\s*$;;')
        if [[ "${line}" =~ "processor".*: ]]; then
            echo -e "\033[033m${lines[0]}:\033[0m${lines[1]}"
        else
            echo -e "\033[033m\t${lines[0]}:\033[0m${lines[1]:-}"
        fi
    done
    unset line lines
fi
rm "${tmpf}"
echo -e "\033[033mSearching for Python:\033[0m"
IFS="${OLD_IFS}"
