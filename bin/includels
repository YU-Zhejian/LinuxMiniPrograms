#!/usr/bin/env bash
# INCLUDELS v1
set -ue
DN="$(readlink -f "$(dirname "${0}")")"
. "${DN}"/../lib/libisopt
. "${DN}"/../lib/libstr
. "${DN}"/../etc/path.conf
infoh "YuZJLab INCLUDEPATH ls"
infoh "Copyright (C) 2019-2021 YU Zhejian"
oldifs="${IFS}"

gccinclude=$(for dir in \
	/clang*/include \
	/mingw*/include \
	/lib*/gcc*/*/*/include \
	/usr/lib*/gcc*/*/*/include \
	/usr/local/lib*/gcc*/*/*/include \
	"${HOME}"/usr/lib*/gcc*/*/*/include \
	"${HOME}"/usr/local/lib*/gcc*/*/*/include \
	/lib*/gcc*/*/include \
	/usr/lib*/gcc*/*/include \
	/usr/local/lib*/gcc*/*/include \
	"${HOME}"/usr/lib*/gcc*/*/include \
	"${HOME}"/usr/local/lib*/gcc*/*/include \
	/lib*/gcc*/include \
	/usr/lib*/gcc*/include \
	/usr/local/lib*/gcc*/include \
	"${HOME}"/usr/lib*/gcc*/include \
	"${HOME}"/usr/local/lib*/gcc*/include; do echo ${dir}; done | grep -v '*' | tr '\n' ':')

clanginclude=$(for dir in /lib*/clang*/*/include \
	/usr/lib*/clang*/*/include \
	/usr/local/lib*/clang*/*/include \
	"${HOME}"/usr/lib/clang*/*/include \
	"${HOME}"/usr/local/lib/clang*/*/include \
	/lib*/clang*/include \
	/usr/lib*/clang*/include \
	/usr/local/lib*/clang*/include \
	"${HOME}"/usr/lib/clang*/include \
	"${HOME}"/usr/local/lib/clang*/include; do echo ${dir}; done | grep -v '*' | tr '\n' ':')

INPATH="/usr/include:/usr/local/include:${HOME}/include:${HOME}/usr/include:${HOME}/usr/local/include:${gccinclude}:${clanginclude}:${C_INCLUDE_PATH:-}"${CPLUS_INCLUDE_PATH:-}
. "${DN}"/../lib/libpath
IFS=":"
eachpath=(${valid_path})
unset duplicated_path invalid_path
IFS=''
STDS=()
for opt in "${@}"; do
	if isopt "${opt}"; then
		case "${opt}" in
		"-h" | "--help")
			yldoc includels
			exit 0
			;;
		"-v" | "--version")
			echo "Version 1"
			exit 0
			;;
		"-l" | "--list")
			echo ${valid_path} | tr ':' '\n'
			unset valid_path
			exit 0
			;;
		"-x")
			set -x
			;;
		*)
			warnh "Option '${opt}' invalid. Ignored"
			;;
		esac
	else
		STDS=(${STDS[@]} "${opt}")
	fi
done
unset valid_path
tmpf="$(mktemp -t pls.XXXXXX)"
infoh "Reading database..."
for dir in "${eachpath[@]}"; do
	find "${dir}" 2> /dev/null >> "${tmpf}" || true
done
if [ ${#STDS[@]} -eq 0 ]; then
	cat "${tmpf}"
else
	IFS=''
	grepstr=''
	for fn in "${STDS[@]}"; do
		grepstr="${grepstr} -e ${fn}"
	done
	eval cat \"${tmpf}\"\|grep "${grepstr}"
fi
rm "${tmpf}"
IFS="${oldifs}"
