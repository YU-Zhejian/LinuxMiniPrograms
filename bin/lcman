#!/usr/bin/env bash
# LCMAN V3EP5
set -ue
DN="$(readlink -f "$(dirname "${0}")")"
. "${DN}"/../etc/path.sh
echo -e "\033[33mYuZJLab LiveChat Manager"
echo -e "Copyright (C) 2019-2020 YU Zhejian\033[0m"
if ! [[ "$("${mymore}" --version 2>&1||true)" =~ .*"util-linux".* ]]; then
	echo -e "\033[31mWARNING: Will use ${mycat} as more.\033[0m"
	mymore="${mycat}"
fi
more="${mymore}"
LVCD="${DN}/../var/livechat.d"
if [ ! -e "${LVCD}"/MESSAGES ]; then
	echo -e "\033[31mERROR: livechat.d/MESSAGES not exist.\033[0m"
	exit 1
fi
OLD_IFS="${IFS}"
IFS=";"
tmpfff="$(mktemp -t lcman.XXXXXX)"
. "${DN}"/../lib/libisopt
STDS=()
sf=()
sm=()
se=()
for opt in "${@}"; do
	if isopt "${opt}"; then
		case "${opt}" in
		"-v" | "--version")
			echo -e "\033[33mVersion 3 Emergency Patch 5, compatiable with LiveChat Version 1 & 2.\033[0m"
			exit 0
			;;
		"-h" | "--help")
			yldoc lcman
			exit 0
			;;
		--more\:*)
			more="${opt:7}"
			if [ $("${more}" --help &>/dev/null;echo ${?}) -eq 127 ]; then
				echo -e "\033[31mERROR! Invalid More '${more}'! Will use original '${mymore}' instead.\033[0m"
				more="${mymore}"
			else
				echo -e "\033[33mWill use '${more}' as More.\033[0m"
			fi
			;;
		-f\:*)
			sf=(${sf[@]} ${opt:3})
			;;
		-m\:*)
			sm=(${sm[@]} ${opt:3})
			;;
		--from\:*)
			sf=(${sf[@]} ${opt:7})
			;;
		--message\:*)
			sm=(${sm[@]} ${opt:10})
			;;
		-e\:*)
			se=(${se[@]} ${opt:3})
			;;
		--exclude\:*)
			se=(${se[@]} ${opt:10})
			;;
		"-s" | "--exclude-system")
			se=(${se[@]} "SYSTEM")
			;;
		*)
			echo -e "\033[31mERROR: Option '${opt}' invalid.\033[0m"
			exit 1
			;;
		esac
	else
		STDS=("${STDS[@]}" "${opt}")
	fi
done
echo -e "\033[33mReading Databases...\033[0m"
i=0
while read line; do
	msg_tmp=(${line})
	f[${i}]="${msg_tmp[1]}"
	m[${i}]="${msg_tmp[2]}"
	uf[${i}]=false
	um[${i}]=false
	unset msg_tmp
	i=$(($i + 1))
done <"${LVCD}"/MESSAGES
echo -e "\033[33mFiltering...\033[0m"
if [ ${#sf[@]} -eq 0 ]; then
	for ((n = 0; n <= i; n++)); do
		uf[${n}]=true
	done
else
	for item in "${sf[@]}"; do
		for ((n = 0; n <= i - 1; n++)); do
			[[ ${f[${n}]} == *${item}* ]] && uf[${n}]=true || true
		done
	done
fi
if ! [ ${#se[@]} -eq 0 ]; then
	for item in "${se[@]}"; do
		for ((n = 0; n <= i - 1; n++)); do
			[[ ${f[${n}]} == *${item}* ]] && uf[${n}]=false || true
		done
	done
fi
if [ ${#sm[@]} -eq 0 ]; then
	for ((n = 0; n <= i; n++)); do
		um[${n}]=true
	done
else
	for item in "${sm[@]}"; do
		for ((n = 0; n <= i - 1; n++)); do
			[[ ${m[${n}]} == *${item}* ]] && um[${n}]=true || true
		done
	done
fi
n=0
while read line; do
	if ${uf[${n}]} && ${um[${n}]}; then
		msg_tmp=(${line})
		echo -e "\033[31m[${msg_tmp[0]}]\033[0m \033[36m[${msg_tmp[1]}]\033[0m ${msg_tmp[2]}" >>"${tmpfff}"
	fi
	n=$((n + 1))
done <${LVCD}/MESSAGES
"${mycat}" "${tmpfff}" | "${mysort}" | "${more}"
IFS=${OLD_IFS}
exit 0
