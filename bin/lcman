#!/usr/bin/env bash
# shellcheck disable=SC2034
VERSION=3.11
builtin set -eu
DN="$(readlink -f "$(dirname "${0}")")"
. "${DN}"/../etc/path.conf
. "${DN}"/../shlib/libinclude.sh
__include libisopt
__include libstr
infoh "YuZJLab LiveChat Manager"
infoh "Copyright (C) 2019-2021 YU Zhejian"
LVCD="${DN}/../var/livechat.d"
mkdir -p "${LVCD}"
touch "${LVCD}"/SYSTEM
tmpfff="$(mktemp -t lcman.XXXXXX)"
STDS=()
sf=()
sm=()
se=()
for opt in "${@}"; do
    if isopt "${opt}"; then
        case "${opt}" in
        "-v" | "--version")
            infoh "Version 3 Patch 6, compatible with LiveChat Version 1 & 2"
            builtin exit 0
            ;;
        "-h" | "--help")
            yldoc lcman
            builtin exit 0
            ;;
        -f\:*)
            sf=("${sf[@]}" "${opt:3}")
            ;;
        -m\:*)
            sm=("${sm[@]}" "${opt:3}")
            ;;
        --from\:*)
            sf=("${sf[@]}" "${opt:7}")
            ;;
        --message\:*)
            sm=("${sm[@]}" "${opt:10}")
            ;;
        -e\:*)
            se=("${se[@]}" "${opt:3}")
            ;;
        --exclude\:*)
            se=("${se[@]}" "${opt:10}")
            ;;
        "-s" | "--exclude-system")
            se=("${se[@]}" "SYSTEM")
            ;;
        "-x")
            builtin set -x
            ;;
        *)
            warnh "Option '${opt}' invalid. Ignored"
            ;;
        esac
    else
        STDS=("${STDS[@]}" "${opt}")
    fi
done
infoh "Reading Databases..."
i=0
while builtin read line; do
    builtin mapfile -t msg_tmp < <(builtin echo ${line} | tr ';' '\n')
    f[${i}]="${msg_tmp[1]}"
    m[${i}]="${msg_tmp[2]}"
    uf[${i}]=false
    um[${i}]=false
    builtin unset msg_tmp
    i=$(($i + 1))
done <"${LVCD}"/SYSTEM
infoh "Filtering..."
if [ ${#sf[@]} -eq 0 ]; then
    for ((n = 0; n <= i; n++)); do
        uf[${n}]=true
    done
else
    for item in "${sf[@]}"; do
        for ((n = 0; n <= i - 1; n++)); do
            ! [[ ${f[${n}]} == *"${item}"* ]] || uf[${n}]=true
        done
    done
fi
if ! [ ${#se[@]} -eq 0 ]; then
    for item in "${se[@]}"; do
        for ((n = 0; n <= i - 1; n++)); do
            ! [ ${f[${n}]} = ${item} ] || uf[${n}]=false
        done
    done
fi
if [ ${#sm[@]} -eq 0 ]; then
    for ((n = 0; n <= i; n++)); do
        um[${n}]=true
    done
else
    for item in "${sm[@]}"; do
        for ((n = 0; n <= i - 1; n++)); do
            ! [[ ${m[${n}]} == *"${item}"* ]] || um[${n}]=true
        done
    done
fi
n=0
while builtin read line; do
    if ${uf[${n}]} && ${um[${n}]}; then
        builtin mapfile -t msg_tmp < <(builtin echo ${line} | tr ';' '\n')
        builtin echo -e "${RED}[${msg_tmp[0]}]${NOCOLOR} \033[36m[${msg_tmp[1]}]${NOCOLOR} ${msg_tmp[2]}" >>"${tmpfff}"
    fi
    n=$((n + 1))
done <"${LVCD}"/SYSTEM
cat "${tmpfff}" | sort
builtin exit 0
