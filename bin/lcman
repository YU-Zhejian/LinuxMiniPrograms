#!/bin/bash
# LCMAN V3P2
echo -e "\e[33mYuZJLab LiveChat Manager"
echo -e "Copyright (C) 2019-2020 YU Zhejian\e[0m"
DN=$(dirname ${0})
LVCD="${DN}/../var/livechat.d"
if [ ! -e ${LVCD}/MESSAGES ]; then
    echo -e "\e[31mERROR: livechat.d/MESSAGES not exist.\e[0m"
    exit 1
fi
OLD_IFS="${IFS}"
IFS=";"
tmpfff=$(mktemp -t lcman.XXXXXX)
{ . $DN/../lib/libisopt; } && { echo -e "\e[33mlibisopt loaded\e[0m"; } || {
    echo -e "\e[31mFail to load libisopt.\e[0m"
    exit 1
}
more="more"
for opt in "${@}"; do
    if isopt ${opt}; then
        case ${opt} in
        "-v")
            echo -e "\e[33mVersion 3 patch 2, compatiable with LiveChat Version 1 & 2.\e[0m"
            exit 0
            ;;
        "-h")
            yldoc lcman
            exit 0
            ;;
        --more\:*)
            more=${opt:7}
            ;;
        -f\:*)
            sf=(${sf[@]} ${opt:3})
            ;;
        -m\:*)
            sm=(${sm[@]} ${opt:3})
            ;;
        --from\:*)
            sf=(${sf[@]} ${opt:7})
            ;;
        --message\:*)
            sm=(${sm[@]} ${opt:10})
            ;;
        -e\:*)
        se=(${se[@]} ${opt:3})
        ;;
            --exclude\:*)
        se=(${se[@]} ${opt:10})
        ;;
        "-s"|"--exclude-system")
        se=(${se[@]} "SYSTEM")
        ;;
        *)
            echo -e "\e[31mERROR: Option '${opt}' invalid.\e[0m"
            exit 1
            ;;
        esac
    else
        STDS="${STDS} ${opt}"
    fi
done
echo -e "\e[33mReading Databases...\e[0m"
while read line; do
    msg_tmp=(${line})
    f[${i}]=${msg_tmp[1]}
    m[${i}]=${msg_tmp[2]}
    uf[${i}]=false
    um[${i}]=false
    unset msg_tmp
    i=$(($i + 1))
done <${LVCD}/MESSAGES
echo -e "\e[33mFiltering...\e[0m"
if [ ${#sf[@]} -eq 0 ]; then
    for ((n = 0; n <= i; n++)); do
        uf[${n}]=true
    done
    else
    for item in "${sf[@]}"; do
        for ((n = 0; n <= i; n++)); do
            if [[ ${f[${n}]} == *${item}* ]]; then
                uf[${n}]=true
            fi
        done
    done
fi
if [ ${#se[@]} -eq 0 ]; then
    for ((n = 0; n <= i; n++)); do
        uf[${n}]=true
    done
    else
    for item in "${se[@]}"; do
        for ((n = 0; n <= i; n++)); do
            if [[ ${f[${n}]} == *${item}* ]]; then
                uf[${n}]=false
            fi
        done
    done
fi
if [ ${#sm[@]} -eq 0 ]; then
    for ((n = 0; n <= i; n++)); do
        um[${n}]=true
    done
    else
    for item in "${sm[@]}"; do
        for ((n = 0; n <= i; n++)); do

            if [[ ${m[${n}]} == *${item}* ]]; then
                um[${n}]=true

            fi
        done
    done
fi
n=0
while read line; do
    if ${uf[${n}]} && ${um[${n}]}; then
        msg_tmp=(${line})
        echo -e "\e[31m[${msg_tmp[0]}]\e[0m \e[36m[${msg_tmp[1]}]\e[0m ${msg_tmp[2]}" >>${tmpfff}
    fi
    n=$((n + 1))
done <${LVCD}/MESSAGES
cat ${tmpfff} | sort | ${more}
IFS=${OLD_IFS}
exit 0
