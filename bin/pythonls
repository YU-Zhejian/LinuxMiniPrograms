#!/usr/bin/env bash
VERSION=1.4
# TODO: docs
builtin set -eu
DN="$(readlink -f "$(dirname "${0}")")"
. "${DN}"/../etc/path.conf
. "${DN}"/../shlib/libinclude.sh
__include libisopt
__include libstr
__include libpath
infoh "YuZJLab PYTHONPATH ls"
infoh "Copyright (C) 2021 YU Zhejian"

PACKAGE=false
validate_path "${PATH}"
# shellcheck disable=SC2154
builtin mapfile -t eachpath < <(builtin echo ${valid_path} | tr ':' '\n')
tmpf=$(mktemp -t configpath.XXXXXX)
for dir in "${eachpath[@]}"; do
    # TODO: test CygWin exe support
    # shellcheck disable=SC2010
    ls -F -1 "${dir}" 2>/dev/null | grep '.[*@]$' | sed 's;[*@]$;;' | grep -E '^(python(3|2){0,1}(\.[[:digit:]]+)*(d|m|u){0,1}(.exe){0,1}$)' | sed "s;^;$(builtin echo ${dir})/;" | while read line; do
        if builtin echo "exit()" | "${line}" -v 2>&1 | grep -E '([C-Z]:\\)' >/dev/null; then
            infoh "Windows Python found in ${line}"
            builtin continue
        fi
        infoh "Python found in ${line}"
        builtin echo -e "import sys\nprint (':'.join(sys.path))" | "${line}" >>"${tmpf}" 2>/dev/null || true
    done
done

# shellcheck disable=SC2034
INPATH="${PYTHONPATH}:$(cat "${tmpf}" | tr '\n' ':')"
rm "${tmpf}"
validate_path "${INPATH}"
builtin mapfile -t eachpath < <(builtin echo ${valid_path} | tr ':' '\n')
builtin unset duplicated_path invalid_path
STDS=()
for opt in "${@}"; do
    if isopt "${opt}"; then
        case "${opt}" in
        "-h" | "--help")
            yldoc includels
            builtin exit 0
            ;;
        "-v" | "--version")
            builtin echo ${VERSION}
            builtin exit 0
            ;;
        "-p" | "--package")
            PACKAGE=true
            ;;
        "-l" | "--list")
            builtin echo ${valid_path} | tr ':' '\n'
            builtin unset valid_path
            builtin exit 0
            ;;
        "-x")
            builtin set -x
            ;;
        *)
            warnh "Option '${opt}' invalid. Ignored"
            ;;
        esac
    else
        STDS=("${STDS[@]}" "$(builtin echo "${opt}" | tr '.' '/')")
    fi
done
builtin unset valid_path
tmpf="$(mktemp -t pls.XXXXXX)"
infoh "Reading database..."
if ${PACKAGE}; then
    for dir in "${eachpath[@]}"; do
        ls -1 "${dir}" 2>/dev/null >>"${tmpf}" || true
    done
    if [ ${#STDS[@]} -eq 0 ]; then
        cat "${tmpf}"
    else
        grepstr=''
        for fn in "${STDS[@]}"; do
            grepstr="${grepstr} -e ${fn}"
        done
        builtin eval cat \"${tmpf}\"\|grep "${grepstr}"
    fi
else
    for dir in "${eachpath[@]}"; do
        find "${dir}" 2>/dev/null >>"${tmpf}" || true
    done
    if [ ${#STDS[@]} -eq 0 ]; then
        cat "${tmpf}"
    else
        grepstr=''
        for fn in "${STDS[@]}"; do
            grepstr="${grepstr} -e ${fn}"
        done
        builtin eval cat \"${tmpf}\"\|grep "${grepstr}"
    fi
fi
rm "${tmpf}"
