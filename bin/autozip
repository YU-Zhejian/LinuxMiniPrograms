#!/usr/bin/env bash
# AUTOZIP V3P2
# ============ Functions ============
set -euo pipefail
DN="$(readlink -f "$(dirname "${0}")")"
ISAUTOZIP=true
. "${DN}"/exec/libautozip.sh
# ============ Start ============
echo -e "\e[33mYuZJLab AutoZip"
echo -e "Copyright (C) 2019-2020 YU Zhejian\e[0m"
preck
ppopt "${@}"
STDI=(${STDS[@]})
fn="${STDI[0]:-}"
if [ -z "${fn}" ]; then
    autozipck
    exit 0
fi
if ! [ -e "${fn}" ]; then
    echo -e "\e[31mERROR: Filename '${fn}' invalid.\e[0m"
    exit 1
fi
if [ -z "${STDI[1]:-}" ]; then
    if [ -f "${fn}" ]; then
        ext="gz"
    else
        fn=$(echo ${fn} | ${mysed} "s:/$::")
        ext="tar.gz"
    fi
else
    ext=${STDI[1]}
    ckext
    if [ -f "${fn}" ]; then
        case "${ext}" in
        "gz" | "bgz" | "GZ" | "xz" | "bz2" | "lzma" | "lz") ;;

        *)
            echo -e "\e[31mERROR: You're about to compress FOLDER '${fn}' with extension '${ext}', which is designed for compressing SINGLE FILE.\e[0m"
            exit 1
            ;;
        esac
    else
        case "${ext}" in
        "tar" | "tar.gz" | "tgz" | "tar.GZ" | "tar.xz" | "txz" | "tar.bz2" | "tbz" | "tar.lzma" | "tar.lz" | "tlz") ;;

        \
            *)
            echo -e "\e[31mERROR: You're about to compress FILE '${fn}' with extension '${ext}', which is designed for compressing FOLDERs.\e[0m"
            exit 1
            ;;
        esac
        if [ ${mytar} = "ylukh" ]; then
            echo -e "\e[31mERROR: No tar available!\e[0m"
            exit 1
        fi
    fi
fi
if [ -n "${SPLIT:-}" ]; then
    VALIDSPLIT=false
    case ${ext} in
    "rar")
        if [[ "${SPLIT}" =~ ^[0-9]+[bkm]$ ]]; then
            VALIDSPLIT=true
        fi
        ;;
    "zip")
        if [[ "${SPLIT}" =~ ^[0-9]+[kmgt]$ ]]; then
            VALIDSPLIT=true
        fi
        ;;
    "7z")
        if [[ "${SPLIT}" =~ ^[0-9]+[bkmg]$ ]]; then
            VALIDSPLIT=true
        fi
        ;;
    *)
        if [[ "${SPLIT}" =~ ^[0-9]+$ ]] || [[ "${SPLIT}" =~ ^[0-9]+[KMGTPEZY]$ ]] || [[ "${SPLIT}" =~ ^[0-9]+[KMGTPEZY]B$ ]]; then
            VALIDSPLIT=true
        fi
        ;;
    esac
    if ${VALIDSPLIT}; then
        mktmp
        echo -e "\e[33mWill split the archive to ${SPLIT} \e[0m"
    else
        echo -e "\e[31mERROR: SPLIT value '${SPLIT}' invalid.\e[0m"
        exit 1
    fi
fi
unset VALIDSPLIT
case "${ext}" in
"tar")
    lvl_able=""
    ;;
"xz" | "tar.xz" | "txz" | "zip" | "lzma" | "tlz" | "tar.lzma")
    lvl_able="[0123456789]"
    ;;
"rar")
    lvl_able="[012345]"
    ;;
"7z")
    lvl_able="[013579]"
    ;;
*)
    lvl_able="[123456789]"
    ;;
esac
case "${STDI[2]:-}" in
${lvl_able})
    LVL="-"${STDI[2]}
    if [ ${ext} = "7z" ]; then LVL="-x=${STDI[2]}"; fi
    ;;
*)
    LVL=''
    echo -e "\e[31mWARNING: Compression level '${STDI[2]:-}' undefined. You can use ${lvl_able} for ${ext} extension.\nWill use default value provided by corresponding algorism.\e[0m"
    unset lvl_able
    ;;
esac
echo -e "\e[33mReceived: ${0} ${fn:-} ${ext:-} ${STDI[2]:-} ${OPT:-} \e[0m"
if ${ISFORCE}; then
    if [ -n "${SPLIT:-}" ]; then
        if [ -e "${fn}".part1.rar ] && [ ${ext} = "rar" ]; then
            "${myrm}" -f "${fn}".part*.rar
        elif [ -e "${fn}".z01 ] && [ ${ext} = "zip" ]; then
            "${myrm}" -f "${fn}".z[0-9][0-9] ${fn}.zip
        elif [ -e "${fn}".${ext}.001 ]; then
            "${myrm}" -f "${fn}".${ext}.[0-9][0-9][0-9]
        fi
    else
        if [ -e "${fn}.${ext}" ]; then
            "${myrm}" -f "${fn}.${ext}"
        fi
    fi
else
    if [ -n "${SPLIT:-}" ]; then
        if [ -e "${fn}".part1.rar ] && [ ${ext} = 'rar' ]; then
            for tfn in "${fn}".part*.rar; do
                "${mymv}" -f "${tfn}" "${tfn}".bak
            done
        elif [ -e "${fn}".z01 ] && [ ${ext} = 'zip' ]; then
            for tfn in "${fn}".z[0-9][0-9]; do
                "${mymv}" -f "${tfn}" "${tfn}".bak
            done
            "${mymv}" -f "${fn}".zip "${fn}".zip.bak
        elif [ -e "${fn}".${ext}.001 ]; then
            for tfn in "${fn}".${ext}.[0-9][0-9][0-9]; do
                "${mymv}" -f "${tfn}" "${tfn}".bak
            done
        elif [ -e "${fn}".${ext} ]; then
            "${mymv}" -f "${fn}".${ext} "${fn}".${ext}.bak
        fi
        unset tfn
    else
        if [ -e ${fn}.${ext} ]; then
            "${mymv}" -f "${fn}".${ext} "${fn}".${ext}.bak
        fi
    fi
fi
# ============ Start Compressing ============
if ${USEPARALLEL}; then
    PAR="${myparallel} --pipe --recend '' -k"
else
    PAR=''
fi
case ${ext} in
"tar") # ============ tar ============
    if [ -n "${SPLIT:-}" ]; then
        "${mytar}" -f - -cv "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${fn}".${ext}.
    else
        "${mytar}" -cvf "${fn}".${ext} "${fn}"
    fi
    ;;
"tar.gz" | "tgz" | "tar.GZ") # ============ tgz ============
    if [ "${mygzip}" = 'ylukh' ] && [ "${mypigz}" != 'ylukh' ]; then
        echo -e "\e[31mERROR: GZip NO exist!\e[0m"
        exit 1
    fi
    if [ "${mypigz}" != 'ylukh' ] && ${USEPARALLEL}; then
        cmd="${mypigz}"
    else
        cmd="${PAR} ${mygzip}"
    fi
    if [ -n "${SPLIT:-}" ]; then
        "${mytar}" -f - -cv "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${cmd} ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        "${mytar}" -f - -cv "${fn}" | ${cmd} ${LVL} >"${fn}".${ext}
    fi
    ;;
"tar.xz" | "txz") # ============ txz ============
    if [ "${myxzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: XZ NO exist!\e[0m"
        exit 1
    fi
    if ${USEPARALLEL}; then
        PAR="--threads=0"
    fi
    if [ -n "${SPLIT:-}" ]; then
        "${mytar}" -f - -cv "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | "${myxzip}" ${PAR} ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        "${mytar}" -f - -cv "${fn}" | "${myxzip}" ${PAR} ${LVL} >"${fn}".${ext}
    fi
    ;;
"tar.bz2" | "tbz") # ============ tbz ============
    if [ "${mybzip2}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: BZip2 NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then
        "${mytar}" -f - -cv "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${PAR} "${mybzip2}" ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        "${mytar}" -f - -cv "${fn}" | ${PAR} "${mybzip2}" ${LVL} >"${fn}"."${ext}"
    fi
    ;;
"tar.lzma" | "tar.lz" | "tlz") # ============ tlz ============
    if [ "${myxzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: XZ NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then
        "${mytar}" -f - -cv "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${PAR} "${myxzip}" --format=lzma ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        "${mytar}" -f - -cv "${fn}" | ${PAR} "${myxzip}" --format=lzma ${LVL} >"${fn}".${ext}
    fi
    ;;
"gz" | "GZ") # ============ gz ============
    if [ "${mygzip}" = 'ylukh' ] && [ "${mypigz}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: GZip NO exist!\e[0m"
        exit 1
    fi
    if [ "${mypigz}" = 'ylukh' ] && ${USEPARALLEL}; then
        cmd="${mypigz}"
    else
        cmd="${PAR} ${mygzip}"
    fi
    if [ -n "${SPLIT:-}" ]; then
        cat "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${cmd} ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        cat "${fn}" | ${cmd} ${LVL} >"${fn}".${ext}
    fi
    ;;
"bgz") # ============ bgz ============
    if [ "${mybgzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: BGZip NO exist!\e[0m"
        exit 1
    fi
    ext="gz"
    if [ -n "${SPLIT:-}" ]; then
        echo -e "\e[31mERROR: BGZip do not support split!\e[0m"
        exit 1
    else
        cat "${fn}" | ${PAR} "${mybgzip}" ${LVL} >"${fn}".${ext}
    fi
    ;;
"xz") # ============ xz ============
    if [ "${myxzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: XZ NO exist!\e[0m"
        exit 1
    fi
    if ${USEPARALLEL}; then PAR="--threads=0"; fi
    if [ -n "${SPLIT:-}" ]; then
        cat "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in ${tempdir}/${fn}.*; do
            cat "${tfn}" | "${myxzip}" ${PAR} ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        cat "${fn}" | "${myxzip}" ${PAR} ${LVL} >"${fn}".${ext}
    fi
    ;;
"bz2") # ============ bz2 ============
    if [ "${mybzip2}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: BZip2 NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then
        cat "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${PAR} "${mybzip2}" ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        cat "${fn}" | ${PAR} "${mybzip2}" ${LVL} >"${fn}".${ext}
    fi
    ;;
"lz" | "lzma") # ============ lz ============
    if [ "${myxzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: XZ NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then
        cat "${fn}" | split -a 3 --numeric-suffixes=001 -b ${SPLIT} - "${tempdir}"/"${fn}".
        for tfn in "${tempdir}"/"${fn}".*; do
            cat "${tfn}" | ${PAR} "${myxzip}" --format=lzma ${LVL} >"${fn}".${ext}.${tfn:0-3}
        done
    else
        cat "${fn}" | ${PAR} "${myxzip}" --format=lzma ${LVL} >"${fn}".${ext}
    fi
    ;;
"7z") # ============ 7z ============
    if [ "${my7z}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: p7zip NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then SPL="-v${SPLIT}"; fi
    if ${USEPARALLEL}; then PAR="-mmt0"; fi
    "${my7z}" -y ${PAR} u "${fn}".${ext} "${fn}" ${LVL} ${SPL}
    ;;
"zip") # ============ zip ============
    if [ "${myzip}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: zip NO exist!\e[0m"
        exit 1
    fi
    if [ -n "${SPLIT:-}" ]; then SPL="-s ${SPLIT}"; fi
    "${myzip}" ${SPL} -r "${fn}".${ext} "${fn}" ${LVL}
    ;;
"rar") # ============ rar ============
    if [ "${myrar}" = 'ylukh' ]; then
        echo -e "\e[31mERROR: rar NO exist!\e[0m"
        exit 1
    fi
    if ${USEPARALLEL}; then PAR="-mt8"; fi
    if [ -n "${SPLIT:-}" ]; then SPL="-v${SPLIT}"; fi
    "${myrar}" ${PAR} ${SPL} a "${fn}".${ext} "${fn}"
    ;;
esac
# ============ Finished ============
echo -e "\e[33mRemoving temporary resources...\e[0m"
if [ -n "${SPLIT:-}" ]; then
    "${myrm}" -rf "${tempdir}" "${tempf}"
fi
if ${REMOVE}; then "${myrm}" -rf ${fn}; fi
echo -e "\e[33mFinished.\e[0m"
exit 0
