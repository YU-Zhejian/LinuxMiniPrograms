#!/usr/bin/env bash
# FINDPYTHON V1
# Usage: FindPython [2|3] [-q|-a]
oldIFS=${IFS}
DN=$(dirname ${0})
. ${DN}/../lib/libisopt || exit 1
mypath="$(echo ${PATH}):${wd}"
IFS=":"
eachpath=(${mypath})
IFS=''
FP_QUICK_ACTION=false
FP_ALL=false
for opt in "${@}"; do
    if isopt "${opt}"; then
        case ${opt} in
        "-q")
            FP_QUICK_ACTION=true
            ;;
        "-a")
            FP_ALL=true
            ;;
        *)
            exit 1
            ;;
        esac
    else
        if ! [ -z ${STDS} ]; then exit 1; fi
        STDS="${opt}"
    fi
done
if [ -z ${STDS} ]; then
    VER=3
    Out_V=3
else
    VER=${STDS}
    Out_V=${STDS}
fi
for dir in "${eachpath[@]}"; do
    if ! [ -d ${dir} ]; then continue; fi
    tmpf=$(mktemp -t pycmd.XXXXXX)
    ls -F -1 ${dir} | grep '.\*$' | sed "s;\*\$;;" | grep '^python' | grep '^python\([23]\(\.[0-9]*\)*\)*\(\.exe\)*$' | sed "s;^;$(echo ${dir})/;" >${tmpf}
    while read line; do
        curr_version=$(${line} --version 2>&1 | cut -f 2 -d " ")
        if [[ "${curr_version}" == ${VER}* ]]; then
            if ${FP_QUICK_ACTION}; then
                echo "${line}"
                exit 0
            elif ${FP_ALL}; then
                echo ${line}
            elif [ $(expr ${curr_version} \>= ${Out_V}) -eq 1 ]; then
                Out_C="${line}"
                Out_V=${curr_version}
            fi
        fi
    done <${tmpf}
    rm ${tmpf}
done
if ! [ -z "${Out_C}" ]; then
    echo ${Out_C}
fi
IFS=${oldIFS}
