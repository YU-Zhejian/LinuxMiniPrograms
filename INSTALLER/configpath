#!/usr/bin/env bash
# CONFIGPATH V1P1
set -eu
cd INSTALLER
path_sh="../etc/path.sh"
if ! [ -f "${path_sh}" ]; then
    touch "${path_sh}"
else
    . "${path_sh}"
fi
#=====os=====
if [ -z "${myos:-}" ]; then
    os_type=$(uname -mrs)
    echo "Current OS: ${os_type}"
    os_type_main=$(echo ${os_type} | cut -f 1 -d ' ')
    os_type_version=$(echo ${os_type} | cut -f 2 -d ' ')
    echo "myos=\"${os_type_main}\" #${os_type_version}" >>"${path_sh}"
    unset os_type os_type_main os_type_version
fi
#=====path=====
echo -e "\e[33mEnumerating valid path...\e[0m"
. ../lib/libpath
unset invalid_path duplicated_path
IFS=':'
eachpath=(${valid_path})
IFS=''
if [[ ${valid_path} =~ .*"$(dirname "${0}/../bin")".* ]];then
    echo "export PATH=$(dirname "${0}/../bin"):${PATH}" >>${HOME}/.bashrc
    export PATH=$(dirname "${0}/../bin"):${PATH}
fi
echo ${valid_path} | tr ':' '\n'
echo -e "\e[33mEnd locating valid path.\e[0m"
unset valid_path
. exec/ls.sh
. exec/grep.sh
. exec/sed.sh
. exec/python.sh
. exec/tar.sh
. exec/gzip.sh
. exec/rm.sh
. exec/cp.sh
. exec/mv.sh
. exec/mkdir.sh
. exec/chmod.sh
. exec/chown.sh
. exec/bgzip.sh
. exec/pigz.sh
. exec/xzip.sh
. exec/bzip2.sh
. exec/7z.sh
. exec/zip.sh
. exec/rar.sh
. exec/unzip.sh
. exec/unrar.sh
. exec/parallel.sh
echo -e "\e[33mAll configurations are printed as follows:\e[0m"
cat "${path_sh}" | ${mygrep} -v '^$' | ${mysed} 's/^my//' | ${mysed} 's/=/\\\\e[33m in \\\\e[0m/ ' | ${mysed} 's/ #/\\\\e[33m, \\\\e[32m/' | while read line; do echo -e "${line}\e[0m"; done
cd ..
