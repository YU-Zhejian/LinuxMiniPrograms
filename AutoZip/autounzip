#!/bin/bash
# ============ Functions ============
DN=`dirname $0`
if ! [ -f $DN/libautozip ];then
    echo -e "\e[31mERROR: libautozip NO found!.\e[0m"
    exit 1
fi
. $DN/libautozip
# Make a number 3 digit
function fixthree(){
    fout=""$1
    while [ ${#fout} -lt 3 ];do
        fout="0"$fout
    done
    echo $fout
}
# Standard_C heads
function stdc_h(){
    file_i=1
    in_i=001
    if $USEPARALLEL;then
        while [ -f $fulln.$in_i ] ;do
            echo -e "\e[33mWill execute: echo \"cat `pwd`/$fulln.$in_i|$@>>$tempdir/$in_i\">>$tempdir/$in_i.sh\e[0m"
            echo "cat `pwd`/$fulln.$in_i|$@>>$tempdir/$in_i">>$tempdir/$in_i.sh
            chmod +x $tempdir/$in_i.sh
            file_i=$[$file_i +1]
            in_i=`fixthree $file_i`
        done
        echo -e "\e[33mWill execute: find $tempdir/*.sh|$PP bash\e[0m"
        find $tempdir/*.sh|$PP bash
    else
        while [ -f $fulln.$in_i ] ;do
            echo -e "\e[33mWill execute: cat $fulln.$in_i|$@>>$tempdir/$in_i\e[0m"
            cat $fulln.$in_i|$@>>$tempdir/$in_i
            file_i=$[$file_i +1]
            in_i=`fixthree $file_i`
        done
    fi
}
# standard TAR creator
function stdtc(){
    stdc_h $@
    file_i=1
    in_i=001
    while [ -f $fulln.$in_i ] ;do
        echo -e "\e[33mWill execute: cat $tempdir/$in_i>>$tempf\e[0m"
        cat $tempdir/$in_i>>$tempf
        file_i=$[$file_i +1]
        in_i=`fixthree $file_i`
    done
    unset file_i in_1
    echo -e "\e[33mWill execute: tar xvf $tempf\e[0m"
    tar xvf $tempf
}
# standard FILE creator
function stdfc(){
    stdc_h $@
    file_i=1
    in_i=001
    while [ -f $fulln.$in_i ] ;do
        echo -e "\e[33mWill execute: cat $tempdir/$in_i>>$fn\e[0m"
        cat $tempdir/$in_i>>$fn
        file_i=$[$file_i +1]
        in_i=`fixthree $file_i`
    done
    unset file_i in_1
}
# ============ Start ============
echo -e "\e[33mYuZJLab AutoUnZip.\e[0m"
echo -e "\e[33mCopyright (C) 2019-2020 YU Zhejian\e[0m"
preck
if [ $PARALLEL -eq 0 ];then PP="/usr/bin/parallel";fi
USESPLIT=false
# ============ Possess options ============
for opt in $@;do
    if [ `isopt $opt` -eq 0 ];then
        case $opt in
            "-h"|"--help")
                if [ -f $DN/autozip.Usage ];then
                    cat $DN/autozip.Usage
                    exit 0
                else
                    echo -e "\e[31mERROR: $DN/autozip.Usage not found!\e[0m"
                    exit 1
                fi
            ;;
            "-v"|"--version")
                echo "Version 1.0.0"
            ;;
            --force-parallel\:*)
                PP=${opt:17}
                if [ `$PP -h&>>/dev/null;echo $?` -eq 0 ];then
                    USEPARALLEL=true
                    echo -e "\e[33mWill use GNU Parallel in '$PP'.\e[0m"
                else
                    echo -e "\e[31mERROR: GNU Parallel path '$PP' invalid.\e[0m"
                    if [ $PARALLEL -eq 0 ];then PP="/usr/bin/parallel";echo -e "\e[31mERROR: Will use GNU Parallel in /usr/bin/parallel\e[0m";fi
                fi
            ;;
            *)
                echo -e "\e[31mERROR: Option '$opt' invalid.\e[0m"
                exit 1
        esac
        OPT="$OPT $opt"
    else
        STDS="$STDS $opt"
    fi
done
# ============ Possess arguments ============
STDI=($STDS)
fulln=${STDI[0]}
if [ -z $fulln ];then
    autozipck
    exit 0
    elif [ -e "$fulln.001" ];then
    USESPLIT=true
    elif ! [ -e $fulln ];then
    echo -e "\e[31mERROR: Filename '$fulln' invalid.\e[0m"
    exit 1
fi
fn=${fulln%.*}
ext=${fulln##*.}
if [ ${fn##*.} = "tar" ];then
    ext="tar.$ext"
    fn=${fn%.*}
fi
if [ -e $fn ];then
    echo -e "\e[31mWARNING: $fn exists! Will rename $fn as $fn.bak.\e[0m"
    mv -f $fn $fn.bak
fi
echo -e "\e[33mReceived: $0 $fulln $OPT ==>Extension=$ext\e[0m"
# ============ Makt tmp ============
tempdir=`mktemp -dt autozip.XXXXXX`
echo -e "\e[33mTEMP directory '$tempdir' made.\e[0m"
tempf=`mktemp -t autozip.XXXXXX`
echo -e "\e[33mTEMP file '$tempf' made.\e[0m"
# ============ Start Compressing ============
case $ext in
    "tar") # ============ tar ============
        if $USESPLIT;then
            file_i=1
            in_i=001
            while [ -f $fulln.$in_i ] ;do
                echo -e "\e[33mWill execute: cat $fulln.$in_i>$tempf\e[0m"
                cat $fulln.$in_i>>$tempf
                file_i=$[$file_i +1]
                in_i=`fixthree $file_i`
            done
            unset file_i in_1
            echo -e "\e[33mWill execute: tar xvf $tempf\e[0m"
            tar xvf $tempf
        else
            echo -e "\e[33mWill execute: tar xvf $fulln\e[0m"
            tar xvf $fulln
        fi
    ;;
    "tar.gz"|"tgz"|"tar.GZ") # ============ tgz ============
        if ! [ $GZIP -eq 0 ]; then echo -e "\e[31mERROR: GZip NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdtc "gzip -dk"
        else
            if $USEPARALLEL && [ $PIGZ -eq 0 ];then
                echo -e "\e[33mWill execute: tar xzvf $fulln\e[0m"
                pigz -d $fulln|tar zvf >$fn
            else
                echo -e "\e[33mWill execute: tar xzvf $fulln\e[0m"
                tar xzvf $fulln
            fi
        fi
    ;;
    "tar.xz"|"txz") # ============ txz ============
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: XZ NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdtc "xz -dk"
        else
            echo -e "\e[33mWill execute: tar xJvf $fulln\e[0m"
            tar xJvf $fulln
        fi
    ;;
    "tar.bz2"|"tbz") # ============ tbz ============
        if ! [ $BZIP2 -eq 0 ]; then echo -e "\e[31mERROR: BZip2 NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdtc "bz2 -dk"
        else
            echo -e "\e[33mWill execute: tar xjvf $fulln\e[0m"
            tar xjvf $fulln
        fi
    ;;
    "tar.lzma"|"tar.lz"|"tlz") # ============ tlz ============
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: LZMA SDK NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdtc "xz -dk --format=lzma"
        else
            echo -e "\e[33mWill execute: tar xvf --lzma $fulln\e[0m"
            tar xvf --lzma $fulln
        fi
    ;;
    "gz"|"GZ") # ============ gz ============
        if ! [ $GZIP -eq 0 ]; then echo -e "\e[31mERROR: GZip NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdfc "gzip -dk"
        else
            if $USEPARALLEL && [ $PIGZ -eq 0 ];then
                echo -e "\e[33mWill execute: pigz -dk $fulln\e[0m"
                cat $fulln|pigz -d>$fn
            else
                echo -e "\e[33mWill execute: gzip -dk $fulln\e[0m"
                cat $fulln|gzip -d>$fn
            fi
        fi
    ;;
    "xz") # ============ xz ============
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: XZ NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdfc "xz -dk"
        else
            echo -e "\e[33mWill execute: xz -dk $fulln\e[0m"
            xz -dk $fulln
        fi
    ;;
    "bz2") # ============ bz2 ============
        if ! [ $BZIP2 -eq 0 ]; then echo -e "\e[31mERROR: BZip2 NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdfc "bzip2 -dk"
        else
            echo -e "\e[33mWill execute: bzip2 -dk $fulln\e[0m"
            bzip2 -dk $fulln
        fi
    ;;
    "lz"|"lzma") # ============ lz ============
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: XZ NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then
            stdfc "xz -dk --format=lzma"
        else
            echo -e "\e[33mWill execute: xz -dk --format=lzma $fulln\e[0m"
            xz -dk --format=lzma $fulln
        fi
    ;;
    "7z") # ============ 7z ============
        if ! [ $Z7 -eq 0 ]; then echo -e "\e[31mERROR: p7zip NO exist!\e[0m";exit 1;fi
        if $USESPLIT;then SUFF=".001";fi
        if $USEPARALLEL;then PAR="-mmt0";fi
        echo -e "\e[33mWill execute: 7za $PAR x $fulln $fulln$SUFF\e[0m"
        7za $PAR x $fulln$SUFF
    ;;
    "zip") # ============ zip ============
        if ! [ $UNZIP -eq 0 ]; then echo -e "\e[31mERROR: unzip NO exist!\e[0m";exit 1;fi
        if [[ -f $fn.z01 ]];then
            if ! [ $ZIP -eq 0 ]; then echo -e "\e[31mERROR: zip NO exist!\e[0m";exit 1;fi
            echo -e "\e[33mWill execute: cat $fn.z* > $tempdir/$fn.zip\e[0m"
            cp $fn.z* $tempdir/
            echo -e "\e[33mWill execute: zip -F $tempdir/$fn.zip\e[0m"
            zip -FF $tempdir/$fn.zip --out $tempdir/$fn.fzip
            echo -e "\e[33mWill execute: unzip $tempdir/$fn.zip\e[0m"
            unzip $tempdir/$fn.fzip
        else
            echo -e "\e[33mWill execute: unzip -r $fulln $fulln\e[0m"
            unzip $fulln
        fi
    ;;
    "rar")
        if ! [ $UNRAR -eq 0 ]; then echo -e "\e[31mERROR: unrar NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then PAR="-mt8";fi
        unrar $PAR x $fulln
esac
# ============ Finished ============
echo -e "\e[33mWill execute: rm -rf $tempdir\e[0m"
rm -rf $tempdir
echo -e "\e[33mWill execute: rm -rf $tempf\e[0m"
rm -rf $tempf
echo -e "\e[33mFinished.\e[0m"
exit 0
