#!/bin/bash
# Check for all compoments: backend.
function preck(){
    TAR=`tar --help&>>/dev/null;echo $?`
    GZIP=`gzip -h&>>/dev/null;echo $?`
    BGZIP=$[`bgzip -h&>>/dev/null;echo $?` -1]
    PIGZ=`pigz -h&>>/dev/null;echo $?`
    XZIP=`xz -h&>>/dev/null;echo $?`
    BZIP2=`bzip2 -h&>>/dev/null;echo $?`
    Z7=`7za -h&>>/dev/null;echo $?`
    ZIP=`zip -h&>>/dev/null;echo $?`
    RAR=`rar -\?&>>/dev/null;echo $?`
    UNZIP=`unzip -h&>>/dev/null;echo $?`
    UNRAR=`unrar -\?&>>/dev/null;echo $?`
    LVL=""
    PARALLEL=`/usr/bin/parallel -h&>>/dev/null;echo $?`
    CONFN=`dirname $0`/autozip.conf
    USEPARALLEL=false
    if ! [ -f $CONFN ];then
        echo -e "\e[31mWARNING: Configure file NOT exist. Will generate one by default value.\e[0m"
        echo "NOPARALLEL">$CONFN
        elif [ -d $CONFN ];then
        echo -e "\e[31mERROR: Configure file is a directory.\e[0m"
        exit 1
    else
        i=0
        while read line;do
            conf[$i]=$line
            i=$[$i+1]
        done <$CONFN
        unset line
        if [ ${conf[0]} = "PARALLEL" ]&&[ $PARALLEL ];then USEPARALLEL=true;echo -e "\e[33mWill use GNU Parallel if possible.\e[0m";fi
        unset conf
    fi
}
# Check for all compoments: frontend.
function autozipck(){
    echo -e "\e[33mStart checking all compoments..."
    if [ $TAR -eq 0 ];then
        echo -e "\e[33mChecking for 'tar'...\e[32mOK\e[33m"
        availext="tar"
    else
        echo -e "\e[33mChecking for 'tar'...\e[31mNO\e[33m"
    fi
    if [ $GZIP -eq 0 ];then
        echo -e "Checking for 'gzip'...\e[32mOK\e[33m"
        availext="$availext, gz, GZ"
        if [ $TAR -eq 0 ];then availext="$availext, tar.gz, tar.GZ, tgz";fi
    else
        echo -e "Checking for 'gzip'...\e[31mNO\e[33m"
    fi
    if [ $PIGZ -eq 0 ];then
        echo -e "Checking for 'pigz'...\e[32mOK\e[33m"
    else
        echo -e "Checking for 'pigz'...\e[31mNO\e[33m"
    fi
    if [ $BGZIP -eq 0 ];then
        echo -e "Checking for 'bgzip'...\e[32mOK\e[33m"
        availext="$availext, bgz"
    else
        echo -e "Checking for 'bgzip'...\e[31mNO\e[33m"
    fi
    if [ $XZIP -eq 0 ];then
        echo -e "Checking for 'xz'...\e[32mOK\e[33m"
        availext="$availext, xz, lzma, lz"
        if [ $TAR -eq 0 ];then availext="$availext, tar.xz, txz, tar.lzma, tlz";fi
    else
        echo -e "Checking for 'xz'...\e[31mNO\e[33m"
    fi
    if [ $BZIP2 -eq 0 ];then
        echo -e "Checking for 'bzip2'...\e[32mOK\e[33m"
        availext="$availext, bz2"
        if [ $TAR -eq 0 ];then availext="$availext, tar.bz2, tbz";fi
    else
        echo -e "Checking for 'bzip2'...\e[31mNO\e[33m"
    fi
    if [ $Z7 -eq 0 ]
    then echo -e "Checking for '7z'...\e[32mOK\e[33m"
        availext="$availext, 7z"
    else
        echo -e "Checking for '7z'...\e[31mNO\e[33m"
    fi
    if [ $ZIP -eq 0 ];then
        echo -e "Checking for 'zip'...\e[32mOK\e[33m"
        availext="$availext, zip"
    else
        echo -e "Checking for 'zip'...\e[31mNO\e[33m"
    fi
    if [ $RAR -eq 0 ];then
        echo -e "Checking for 'rar'...\e[32mOK\e[33m"
        availext="$availext, rar"
    else
        echo -e "Checking for 'rar'...\e[31mNO\e[33m"
    fi
    if [ $UNZIP -eq 0 ];then
        echo -e "Checking for 'unzip'...\e[32mOK\e[33m"
    else
        echo -e "Checking for 'unzip'...\e[31mNO\e[33m"
    fi
    if [ $UNRAR -eq 0 ];then
        echo -e "Checking for 'unrar'...\e[32mOK\e[33m"
    else
        echo -e "Checking for 'unrar'...\e[31mNO\e[33m"
    fi
    if [ $PARALLEL -eq 0 ];then
        echo -e "Checking for 'parallel' in /usr/bin...\e[32mOK\e[33m"
    else
        echo -e "Checking for 'parallel' in /usr/bin...\e[31mNO\e[33m"
    fi
    echo -e "Available extension name on your computer:\n$availext"
    echo "Configure file $CONFN are as follows:"
    echo -e  "=====Begin $CONFN=====\e[0m"
    cat $CONFN
    echo -e "\e[33m=====End   $CONFN=====\e[0m"
}
# Check if it is an option.
function isopt(){
    case $1 in
        -?|--*|-?\:*|--*\:*)
            echo 0
        ;;
        *)
            echo 1
    esac
}
