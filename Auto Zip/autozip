#!/bin/bash
echo -e "\e[33mYuZJLab AutoZip. Usage: autozip [file& folder name] [[extension] [level]]\e[0m"
echo -e "\e[33mCopyright (C) 2019-2020 YU Zhejian\e[0m"
TAR=`tar --help&>>/dev/null;echo $?`
GZIP=`gzip -h&>>/dev/null;echo $?`
XZIP=`xz -h&>>/dev/null;echo $?`
BZIP2=`bzip2 -h&>>/dev/null;echo $?`
LZMA=`lzma -h&>>/dev/null;echo $?`
Z7=`7z -h&>>/dev/null;echo $?`
ZIP=`zip -h&>>/dev/null;echo $?`
RAR=`rar -\?&>>/dev/null;echo $?`
PARALLEL=`/usr/bin/parallel -h&>>/dev/null;echo $?`
CONFN=`dirname $0`/autozip.conf
LVL=""
USEPARALLEL=false
CONF=1
if ! [ -f $CONFN ];then
    echo -e "\e[31mWARNING: Configure file \e[31mNO\e[33mt exist. Will generate one by default value.\e[0m"
    echo "NOPARALLEL">$CONFN
    elif [ -d $CONFN ];then
    echo -e "\e[31mERROR: Configure file is a directory.\e[0m"
    exit 1
else
    CONF=0
    i=0
    while read line;do
        conf[$i]=$line
        i=$[$i+1]
    done <$CONFN
    unset line
    if [ ${conf[0]} = "PARALLEL" ]&&[ $PARALLEL ];then USEPARALLEL=true;echo -e "\e[33mWill use GNU Parallel if possible.\e[0m";fi
    case $3 in
        [0-9])
            LVL="-"$3
        ;;
        *)
            echo -e "\e[31mWARNING: Compression level '$3' undefined. Will use default value provided by corresponding algorism.\e[0m"
    esac
    unset conf
fi
if [ -z $1 ];then
    echo -e "\e[33mStart checking all compoments..."
    if [ $TAR -eq 0 ];then
        echo -e "\e[33mChecking for 'tar'...\e[32mOK\e[33m"
        availext="tar"
    else
        echo -e "\e[33mChecking for 'tar'...\e[31mNO\e[33m"
    fi
    if [ $GZIP -eq 0 ];then
        echo -e "Checking for 'gzip'...\e[32mOK\e[33m"
        availext="$availext, gz, GZ"
        if [ $TAR -eq 0 ];then availext="$availext, tar.gz, tar.GZ, tgz";fi
    else
        echo -e "Checking for 'gzip'...\e[31mNO\e[33m"
    fi
    if [ $XZIP -eq 0 ];then
        echo -e "Checking for 'xz'...\e[32mOK\e[33m"
        availext="$availext, xz"
        if [ $TAR -eq 0 ];then availext="$availext, tar.xz, txz";fi
    else
        echo -e "Checking for 'xz'...\e[31mNO\e[33m"
    fi
    if [ $BZIP2 -eq 0 ];then
        echo -e "Checking for 'bzip2'...\e[32mOK\e[33m"
        availext="$availext, bz2"
        if [ $TAR -eq 0 ];then availext="$availext, tar.bz2, tbz";fi
    else
        echo -e "Checking for 'bzip2'...\e[31mNO\e[33m"
    fi
    if [ $LZMA -eq 0 ];then
        echo -e "Checking for 'lzma'...\e[32mOK\e[33m"
        availext="$availext, lz, lzma"
        if [ $TAR -eq 0 ];then availext="$availext, tar.lz, tar.lzma, tlz";fi
    else
        echo -e "Checking for 'lzma'...\e[31mNO\e[33m"
    fi
    if [ $Z7 -eq 0 ]
    then echo -e "Checking for '7z'...\e[32mOK\e[33m"
        availext="$availext, 7z"
    else
        echo -e "Checking for '7z'...\e[31mNO\e[33m"
    fi
    if [ $ZIP -eq 0 ];then
        echo -e "Checking for 'zip'...\e[32mOK\e[33m"
        availext="$availext, zip"
    else
        echo -e "Checking for 'zip'...\e[31mNO\e[33m"
    fi
    if [ $RAR -eq 0 ];then
        echo -e "Checking for 'rar'...\e[32mOK\e[33m"
        availext="$availext, rar"
    else
        echo -e "Checking for 'rar'...\e[31mNO\e[33m"
    fi
    if [ $PARALLEL -eq 0 ];then
        echo -e "Checking for 'parallel' in /usr/bin...\e[32mOK\e[33m"
    else
        echo -e "Checking for 'parallel' in /usr/bin...\e[31mNO\e[33m"
    fi
    if [ $CONF -eq 0 ];then
        echo -e "Checking for $CONFN...\e[32mOK\e[33m"
    else
        echo -e "Checking for $CONFN...\e[31mNO\e[33m"
    fi
    echo -e "Available extension name on your computer:\n$availext"
    echo "Configure file $CONFN are as follows:"
    echo -e  "=====Begin $CONFN=====\e[0m"
    cat $CONFN
    echo -e "\e[33m=====End   $CONFN=====\e[0m"
    exit 0
    elif ! [ -e $1 ];then
    echo -e "\e[31mERROR: Filename '$1' invalid.\e[0m"
    exit 1
fi
if [ -z $2 ]; then
    if [ -f $1 ];then
        ext="gz"
    else
        ext="tar.gz"
    fi
else
    ext=$2
fi
case $ext in
    "tar")
        if [ -f $1 ];then
            echo -e "\e[31mERROR: You're about to compress FILE '$1' with extension '$ext', which is designed for compressing FOLDERs.\e[0m"
            exit 1
            elif ! [ $TAR -eq 0 ]; then echo -e "\e[31mERROR: Command TAR \e[31mNO\e[33mt exist!\e[0m";exit 1
        fi
        
    ;;
    "tar.gz"|"tgz"|"tar.GZ"|"tar.xz"|"txz"|"tar.bz2"|"tbz"|"tar.lzma"|"tar.lz"|"tlz")
        if [ -f $1 ];then
            echo -e "\e[31mERROR: You're about to compress FILE '$1' with extension '$ext', which is designed for compressing FOLDERs.\e[0m"
            exit 1
            elif ! [ $TAR -eq 0 ]; then echo -e "\e[31mERROR: Command TAR \e[31mNO\e[33mt exist!\e[0m";exit 1
        fi
    ;;
    "gz"|"GZ"|"xz"|"bz"|"lzma"|"lz")
        if [ -d $1 ];then
            echo -e "\e[31mERROR: You're about to compress FOLDER '$1' with extension '$ext', which is designed for compressing SINGLE FILE.\e[0m"
            exit 1
        fi
    ;;
    "7z")
        echo -e "\e[31m WARNING: DO NOT USE the 7-zip format for backup purpose on Linux/Unix because 7-zip does not store the owner/group of the file.\e[0m"
    ;;
    "zip")
    ;;
    "rar")
        echo -e "\e[31m WARNING: 1. RAR is a property software. 2. Use ABSOLUTE PATH.\e[0m"
    ;;
    *)
        echo -e "\e[31mERROR: Extension name '$ext' invalid.\nYou can use 'autozip -s' to check available method and extension.\e[0m"
esac
echo -e "\e[33mReceived: $0 $1 $ext $lvl\e[0m"
if [ -e $1.$ext ];then
    case $ext in
        "tar"|"7z"|"zip"|"rar")
            echo -e "\e[31mWARNING: $1.$ext exists! Will ADD NEW&MODIFIED FILES TO $1.$ext.\e[0m"
        ;;
        *)
            if [ -e $1.$ext ];then
                echo -e "\e[31mWARNING: $1.$ext exists! Will rename $1.$ext as $1.$ext.bak.\e[0m"
                mv -f $1.$ext $1.$ext.bak
            fi
    esac
fi
case $ext in
    "tar")
        echo -e "\e[33mWill execute: tar uvf $1.$ext $1\e[0m"
        tar uvf $1.$ext $1
    ;;
    "tar.gz"|"tgz"|"tar.GZ")
        if ! [ $GZIP -eq 0 ]; then echo -e "\e[31mERROR: GZip NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: tar cv $1|/usr/bin/parallel --pipe --recend '' -k gzip $LVL>$1.$ext\e[0m"
            tar cv $1|/usr/bin/parallel --pipe --recend '' -k gzip $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: tar cv $1|gzip $LVL>$1.$ext\e[0m"
            tar cv $1|gzip $LVL>$1.$ext
        fi
    ;;
    "tar.xz"|"txz")
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: XZ NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: tar cv $1|xz -T 0>$1.$ext\e[0m"
            tar cv $1|xz -T 0>$1.$ext
        else
            echo -e "\e[33mWill execute: tar cv $1|xz>$1.$ext\e[0m"
            tar cv $1|xz>$1.$ext
        fi
    ;;
    "tar.bz2"|"tbz")
        if ! [ $BZIP2 -eq 0 ]; then echo -e "\e[31mERROR: BZip2 NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: tar cv $1|/usr/bin/parallel --pipe --recend '' -k bzip2 $LVL>$1.$ext\e[0m"
            tar cv $1|/usr/bin/parallel --pipe --recend '' -k bzip2 $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: tar cv $1|gzip $LVL>$1.$ext\e[0m"
            tar cv $1|bzip2 $LVL>$1.$ext
        fi
    ;;
    "tar.lzma"|"tar.lz"|"tlz")
        if ! [ $LZMA -eq 0 ]; then echo -e "\e[31mERROR: LZMA SDK NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: tar cv $1|/usr/bin/parallel --pipe --recend '' -k lzma $LVL>$1.$ext\e[0m"
            tar cv $1|/usr/bin/parallel --pipe --recend '' -k lzma $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: tar cv $1|lzma $LVL>$1.$ext\e[0m"
            tar cv $1|lzma $LVL>$1.$ext
        fi
    ;;
    "gz"|"GZ")
        if ! [ $GZIP -eq 0 ]; then echo -e "\e[31mERROR: GZip NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: cat $1|/usr/bin/parallel --pipe --recend '' -k gzip $LVL>$1.$ext\e[0m"
            cat $1|/usr/bin/parallel --pipe --recend '' -k gzip $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: cat $1|gzip $LVL>$1.$ext\e[0m"
            cat $1|gzip $LVL>$1.$ext
        fi
    ;;
    "xz")
        if ! [ $XZIP -eq 0 ]; then echo -e "\e[31mERROR: XZ NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: cat $1|xz -T 0>$1.$ext\e[0m"
            cat $1|xz -T 0>$1.$ext
        else
            echo -e "\e[33mWill execute: cat $1|xz>$1.$ext\e[0m"
            cat $1|xz>$1.$ext
        fi
    ;;
    "bz2")
        if ! [ $BZIP2 -eq 0 ]; then echo -e "\e[31mERROR: BZip2 NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: cat $1|/usr/bin/parallel --pipe --recend '' -k bzip2 $LVL>$1.$ext\e[0m"
            cat $1|/usr/bin/parallel --pipe --recend '' -k bzip2 $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: cat $1|gzip $LVL>$1.$ext\e[0m"
            cat $1|bzip2 $LVL>$1.$ext
        fi
    ;;
    "lz"|"lzma")
        if ! [ $LZMA -eq 0 ]; then echo -e "\e[31mERROR: LZMA SDK NO exist!\e[0m";exit 1;fi
        if $USEPARALLEL;then
            echo -e "\e[33mWill execute: cat $1|/usr/bin/parallel --pipe --recend '' -k lzma $LVL>$1.$ext\e[0m"
            cat $1|/usr/bin/parallel --pipe --recend '' -k lzma $LVL>$1.$ext
        else
            echo -e "\e[33mWill execute: cat $1|lzma $LVL>$1.$ext\e[0m"
            cat $1|lzma $LVL>$1.$ext
        fi
    ;;
    "7z")
        if ! [ $Z7 -eq 0 ]; then echo -e "\e[31mERROR: p7zip NO exist!\e[0m";exit 1;fi
        echo -e "\e[33mWill execute: 7za u $1.7z $1\e[0m"
        7za u $1.$ext $1 $LVL
    ;;
    "zip")
        if ! [ $ZIP -eq 0 ]; then echo -e "\e[31mERROR: zip NO exist!\e[0m";exit 1;fi
        echo -e "\e[33mWill execute: zip -r $1.zip $1\e[0m"
        zip -r $1.$ext $1 $LVL
    ;;
    "rar")
        if ! [ $RAR -eq 0 ]; then echo -e "\e[31mERROR: rar NO exist!\e[0m";exit 1;fi
        rar a $1.$ext $1
esac
